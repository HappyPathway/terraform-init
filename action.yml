name: "Terraform Init"
description: "Runs a Terraform Init"
inputs:
  terraform_version:
    required: true
    type: string
  terraform_api:
    required: false
    type: string
  workspace:
    required: false
    type: string
  varfile:
    required: false
    type: string
  setup_terraform:
    type: boolean
    default: false
  terraform_init:
    type: boolean
    default: false
  state_bucket:
    type: string
    required: false
  state_region:
    type: string
    required: false
  state_prefix:
    type: string
    required: false
  state_dynamodb_table:
    type: string
    required: false
  init_args:
    type: string
    required: false
  commit_sha:
    required: false
    type: string

outputs:
  commit_sha:
    description: "Commit SHA"
    value: ${{ steps.checkout.outputs.commit }}
  
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      id: checkout
      with:
        ref: ${{ inputs.commit_sha == '' && github.head_ref || inputs.commit_sha }}
        persist-credentials: false

    - name: Setup Terraform
      uses: CSVD/gh-actions-setup-terraform@v3.1.2
      if: ${{ inputs.setup_terraform && env.TFE_TOKEN != '' }}
      with:
        terraform_version: ${{ inputs.terraform_version }}
        cli_config_credentials_token: ${{ env.TFE_TOKEN }}
        cli_config_credentials_hostname: ${{ inputs.terraform_api }}
 
    - name: Setup Terraform
      uses: CSVD/gh-actions-setup-terraform@v3.1.2
      if: ${{ inputs.setup_terraform && env.TFE_TOKEN == '' }}
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Set Workspace
      if: ${{ inputs.workspace != '' }}
      shell: bash
      run: |
        echo "TF_WORKSPACE=${{ inputs.workspace }}" >> $GITHUB_ENV

    - name: Terraform Init
      id: init_state
      if: ${{ inputs.terraform_init && inputs.state_bucket != '' }}
      shell: bash
      run: |
        terraform init -upgrade ${{ inputs.init_args }} \
        -backend-config="bucket=${{ inputs.state_bucket }}" \
        -backend-config="key=${{ inputs.state_prefix }}" \
        -backend-config="region=${{ inputs.state_region }}" \
        -backend-config="dynamodb_table=${{ inputs.dynamodb_table }}" 
    
    - name: Terraform Init
      id: init_no_state
      if: ${{ inputs.terraform_init && inputs.state_bucket == '' }}
      shell: bash
      run: |
        terraform init -upgrade ${{ inputs.init_args }}

    - uses: CSVD/gh-upload-artifact@master
      name: Archive Configuration
      with:
        name: terraform_dir
        path: .terraform
        retention-days: 1
        include-hidden-files: true

    - uses: CSVD/gh-upload-artifact@master
      name: Archive Lockfile
      with:
        name: terraform_lockfile
        path: .terraform.lock.hcl
        retention-days: 1
        include-hidden-files: true 
