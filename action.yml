name: "Terraform Init"
description: "Runs a Terraform Init"
inputs:
  terraform_version:
    required: true
    description: "Terraform Version"
  terraform_api:
    required: false
    description: "Terraform API"
  workspace:
    required: false
    description: "Terraform Workspace"
  varfile:
    required: false
    description: "Terraform Varfile"
  setup_terraform:
    default: "false"
    description: "Setup Terraform"
  terraform_init:
    default: "false"
    description: "Run Terraform Init"
  state_bucket:
    required: false
    description: "State Bucket"
  state_region:
    required: false
    description: "State Region"
  state_prefix:
    required: false
    description: "State Prefix"
  state_dynamodb_table:
    required: false
    description: "State DynamoDB Table"
  init_args:
    required: false
    description: "Terraform Init Args"
  commit_sha:
    required: false
    default: ""
    description: "Commit SHA"
  cache_bucket:
    required: false
    default: image-pipeline-assets
    description: "Cache Bucket"

outputs:
  commit_sha:
    description: "Commit SHA"
    value: ${{ steps.checkout.outputs.commit }}
  s3_upload_path:
    description: "S3 Path for .terraform directory"
    value: ${{ steps.s3_upload_path.outputs.s3_upload_path }}

runs:
  using: "composite"
  steps:
    - uses: CSVD/gh-actions-checkout@v4
      id: checkout
      with:
        ref: ${{ inputs.commit_sha == '' && github.sha || inputs.commit_sha }}
        persist-credentials: false

    - name: generate uuid
      id: uuid
      shell: bash
      run: |
        uuid=$(cat /proc/sys/kernel/random/uuid)
        echo UUID: ${uuid}
        echo uuid=${uuid} >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: CSVD/gh-actions-setup-terraform@v2
      if: ${{ inputs.setup_terraform && env.TFE_TOKEN != '' }}
      with:
        terraform_version: ${{ inputs.terraform_version }}
        cli_config_credentials_token: ${{ env.TFE_TOKEN }}
        cli_config_credentials_hostname: ${{ inputs.terraform_api }}

    - name: Setup Terraform
      uses: CSVD/gh-actions-setup-terraform@v2
      if: ${{ inputs.setup_terraform && env.TFE_TOKEN == '' }}
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Set Workspace
      if: ${{ inputs.workspace != '' }}
      shell: bash
      run: |
        echo "TF_WORKSPACE=${{ inputs.workspace }}" >> $GITHUB_ENV

    - name: Terraform Init
      id: init_state
      if: ${{ inputs.terraform_init && inputs.state_bucket != '' }}
      shell: bash
      run: |
        terraform init -upgrade ${{ inputs.init_args }} \
        -backend-config="bucket=${{ inputs.state_bucket }}" \
        -backend-config="key=${{ inputs.state_prefix }}" \
        -backend-config="region=${{ inputs.state_region }}" \
        -backend-config="dynamodb_table=${{ inputs.dynamodb_table }}"

    - name: Terraform Init
      id: init_no_state
      if: ${{ inputs.terraform_init && inputs.state_bucket == '' }}
      shell: bash
      run: |
        terraform init -upgrade ${{ inputs.init_args }}

    - uses: CSVD/s3-upload@main
      name: Upload .terraform
      if: ${{ inputs.workspace == '' }}
      with:
        source: .terraform
        bucket: image-pipeline-assets
        archive: true
        key: ${{ github.repository }}/${{ inputs.workspace }}/${{ steps.uuid.outputs.uuid }}/terraform-dir

    - uses: CSVD/s3-upload@main
      name: Upload .terraform
      if: ${{ inputs.workspace != '' }}
      with:
        source: .terraform
        bucket: image-pipeline-assets
        archive: true
        key: ${{ github.repository }}/${{ steps.uuid.outputs.uuid  }}/terraform-dir

    - uses: CSVD/s3-upload@main
      name: Upload Terraform Lock File (Non-Workspace)
      if: ${{ inputs.workspace != '' }}
      with:
        source: .terraform.lock.hcl
        bucket: image-pipeline-assets
        archive: false
        key: ${{ github.repository }}/${{ inputs.workspace }}/${{ steps.uuid.outputs.uuid }}/terraform.lock.hcl

    - uses: CSVD/s3-upload@main
      name: Upload Terraform Lock File (Workspace)
      if: ${{ inputs.workspace == '' }}
      with:
        source: .terraform.lock.hcl
        bucket: image-pipeline-assets
        archive: false
        key: ${{ github.repository }}/${{ steps.uuid.outputs.uuid }}/terraform.lock.hcl

    - name: set s3 path (workspace)
      shell: bash
      if: ${{ inputs.workspace == '' }}
      run: echo "s3_upload_path=${{ github.repository }}/${{ steps.uuid.outputs.uuid  }}" >> $GITHUB_OUTPUT

    - name: set s3 path (non-workspace)
      if: ${{ inputs.workspace != '' }}
      shell: bash
      run: echo "s3_upload_path=${{ github.repository }}/${{ inputs.workspace }}/${{ steps.uuid.outputs.uuid }}" >> $GITHUB_OUTPUT
